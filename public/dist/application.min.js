/*! MEANjsStarter Version: 0.1.0-SNAPSHOT Copyright Asymmetrik, Ltd. 2015 - All Rights Reserved.*/
System.register(["angular2/platform/browser","./app.component","angular2/router","angular2/http"],function(exports_1,context_1){"use strict";var browser_1,app_component_1,router_1,http_1;context_1&&context_1.id;return{setters:[function(browser_1_1){browser_1=browser_1_1},function(app_component_1_1){app_component_1=app_component_1_1},function(router_1_1){router_1=router_1_1},function(http_1_1){http_1=http_1_1}],execute:function(){browser_1.bootstrap(app_component_1.AppComponent,[router_1.ROUTER_PROVIDERS,http_1.HTTP_PROVIDERS])}}});
System.register(["angular2/core","../services/user.client.service"],function(exports_1,context_1){"use strict";var core_1,user_client_service_1,CreateUserComponent,__decorate=(context_1&&context_1.id,this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=3>c?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(3>c?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}),__metadata=this&&this.__metadata||function(k,v){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(k,v):void 0};return{setters:[function(core_1_1){core_1=core_1_1},function(user_client_service_1_1){user_client_service_1=user_client_service_1_1}],execute:function(){CreateUserComponent=function(){function CreateUserComponent(_service){this._service=_service,this.user=new user_client_service_1.User("",""),this.errorMsg=""}return CreateUserComponent.prototype.login=function(){this._service.login(this.user)||(this.errorMsg="Failed to login")},CreateUserComponent=__decorate([core_1.Component({selector:"create-user-form",providers:[user_client_service_1.AuthenticationService],template:'\n<section>\n\n	<form novalidate name="userForm" autocomplete="off" class="form-horizontal" role="form">\n\n		<div class="page-header">\n			<h3>\n				{{title}}\n				<small>{{subtitle}}</small>\n\n				<!-- Show control to re-sync the user\'s cache when proxy-pki is the auth strategh -->\n				<button data-ng-disabled="refreshing" data-ng-if="proxyPki && mode === \'edit\'" data-ng-click="refreshCredentials()" class="btn btn-default btn-sm pull-right">\n					<span class="fa fa-refresh"></span> Refresh User Credentials\n				</button>\n			</h3>\n		</div>\n\n		<!-- Alert Notifications -->\n		<div data-alert data-ng-repeat="alert in alertService.alerts" data-type="{{alert.type}}" data-close="alertService.clear($index)">{{alert.msg}}</div>\n\n		<!-- Basic Information: These are shown always, but disabled in some contexts -->\n\n		<!-- Name -->\n		<div class="form-group row">\n			<label class="col-md-2 control-label" for="name">Name<span class="text-danger"><strong> *</strong></span></label>\n			<div class="col-md-10"><input type="text" class="form-control" id="name" data-ng-model="user.name" data-ng-disabled="metadataLocked" required /></div>\n		</div>\n\n		<!-- Username -->\n		<div class="form-group row">\n			<label class="col-md-2 control-label" for="username">Username<span class="text-danger"><strong> *</strong></span></label>\n			<div class="col-md-10"><input type="text" id="username" class="form-control" data-ng-model="user.username" data-ng-disabled="metadataLocked" required /></div>\n		</div>\n\n		<!-- Organization -->\n		<div class="form-group row">\n			<label class="col-md-2 control-label" for="organization">Organization<span class="text-danger"><strong> *</strong></span></label>\n			<div class="col-md-10"><input type="text" class="form-control" id="organization" data-ng-model="user.organization" data-ng-disabled="metadataLocked" required /></div>\n		</div>\n\n		<!-- Email -->\n		<div class="form-group row">\n			<label class="col-md-2 control-label" for="email">Email<span class="text-danger"><strong> *</strong></span></label>\n			<div class="col-md-10"><input type="email" class="form-control" id="email" data-ng-model="user.email" data-ng-disabled="metadataLocked" required /></div>\n		</div>\n\n		<!-- Phone -->\n		<div class="form-group row" data-ng-show="smsEnabled">\n			<label class="col-md-2 control-label" for="phone">Phone<span class="text-danger"></span></label>\n			<div class="col-md-5">\n				<input\n					type="number"\n					class="form-control no-spinner"\n					id="phone"\n					data-ng-model="phoneNumber"\n					placeholder="Number, Ex: 5551112222"\n					data-ng-disabled="metadataLocked" />\n				</div>\n			<div class="col-md-5">\n				<select\n					class="form-control"\n					id="phone-provider"\n					data-ng-model="phoneProvider"\n					data-ng-options="opt as opt.label for opt in phoneProviders | orderBy:orderByLabel"\n					data-ng-disabled="!phoneNumber || metadataLocked" >\n				</select>\n			</div>\n		</div>\n\n\n		<!-- Local Login Information -->\n		<div data-ng-if="config.auth === \'local\'">\n\n			<div class="page-header">\n				<h3>\n					Password\n					<small>At least 6 characters. <span data-ng-if="mode === \'edit\' || mode === \'admin-edit\'">Leave blank if you do not want to change the password.</span></small>\n				</h3>\n			</div>\n\n			<!-- Current password is needed if you aren\'t an admin and you\'re editing -->\n			<div class="form-group row" data-ng-if="mode === \'edit\'">\n				<label class="col-md-2 control-label" for="currentPassword">Current Password</label>\n				<div class="col-md-10"><input type="password" class="form-control" id="currentPassword" data-ng-model="user.currentPassword"></div>\n			</div>\n\n			<div class="form-group row">\n				<label class="col-md-2 control-label" for="password">New Password</label>\n				<div class="col-md-10"><input type="password" class="form-control" id="password" data-ng-model="user.password"></div>\n			</div>\n			<div class="form-group row">\n				<label class="col-md-2 control-label" for="password2">Re-enter</label>\n				<div class="col-md-10"><input type="password" id="password2" class="form-control" id="verifyPassword" data-ng-model="user.verifyPassword"></div>\n			</div>\n\n		</div>\n\n\n		<!-- PKI Information -->\n		<div data-ng-if="proxyPki">\n\n			<!-- Stuff that admins can modify but normal users don\'t see -->\n			<div data-ng-if="(mode === \'admin-edit\' || mode === \'admin-create\')">\n	\n				<!-- Bypass Access Checker -->\n				<div class="form-group">\n					<label class="col-md-2 control-label">Access Check</label>\n	\n					<div class="col-md-10">\n						<button type="button" class="btn"\n								data-ng-class="{ \'btn-selected\': user.bypassAccessCheck, \'btn-unselected\': !user.bypassAccessCheck }" data-ng-attr-title="Bypass Access Check"\n								data-btn-checkbox data-ng-model="user.bypassAccessCheck">\n							<i class="fa fa-fw" data-ng-class="{ \'fa-check-square-o\': user.bypassAccessCheck, \'fa-square-o\': !user.bypassAccessCheck }"></i>\n								Bypass Access Check\n						</button>\n					</div>\n				</div>\n\n			</div>\n\n			<!-- Stuff that normal users can see, but won\'t be able to modify -->\n			<div data-ng-if="(mode === \'admin-edit\' || mode === \'edit\')">\n\n				<!-- dn -->\n				<div class="form-group row">\n					<label class="col-md-2 control-label" for="dn">DN</label>\n					<div class="col-md-10"><input type="text" id="dn" class="form-control" data-ng-model="user.providerData.dn" disabled/></div>\n				</div>\n			\n				<div class="form-group row">\n					<label class="col-md-2 control-label" for="externalRoles">External Roles</label>\n					<div class="col-md-10"><input type="text" class="form-control" id="externalRoles" data-ng-model="user.externalRoles" disabled></div>\n				</div>\n	\n				<div class="form-group row">\n					<label class="col-md-2 control-label" for="externalGroups">External Groups</label>\n					<div class="col-md-10"><input type="text" class="form-control" id="externalGroups" data-ng-model="user.externalGroups" disabled></div>\n				</div>\n			</div>\n\n		</div>\n\n\n\n\n		<!-- Admin only stuff -->\n		<div data-ng-if="mode === \'admin-edit\' || mode === \'admin-create\'">\n\n			<div class="form-group">\n				<label class="col-md-2 control-label">Roles</label>\n\n				<div class="col-md-10 btn-group">\n					<button data-ng-repeat="role in roles.array"\n							type="button" class="btn"\n							data-ng-class="{ \'btn-selected\': user.roles[role.role], \'btn-unselected\': !user.roles[role.role] }" data-ng-attr-title="{{role.description}}"\n							data-btn-checkbox data-ng-model="user.roles[role.role]">\n						<i class="fa fa-fw" data-ng-class="{ \'fa-check-square-o\': user.roles[role.role], \'fa-square-o\': !user.roles[role.role] }"></i>\n						{{role.label}}\n					</button>\n				</div>\n\n			</div>\n\n		</div>\n\n\n		<div class="form-group row" data-ng-show="error">\n			<div class="col-md-offset-2 col-md-10">\n				<div class="text-danger">\n					<strong>{{error}}</strong>\n				</div>\n			</div>\n		</div>\n\n\n		<div class="form-group row">\n			<div class="col-md-12">\n				<div class="pull-right">\n					<button type="submit" class="btn btn-default" data-ng-click="okAction()" data-ng-disabled="okDisabled">{{okButtonText}}</button>\n					<a type="button" class="btn btn-link" data-ng-if="mode === \'signup\'" data-ui-sref="auth.signin">or Sign In</a>\n					<a type="button" class="btn btn-link" data-ng-if="mode === \'admin-create\' || mode === \'admin-edit\'" data-ui-sref="admin.user.list">Cancel</a>\n				</div>\n			</div>\n		</div>\n\n	</form>\n\n</section>\n    	'}),__metadata("design:paramtypes",[user_client_service_1.AuthenticationService])],CreateUserComponent)}(),exports_1("CreateUserComponent",CreateUserComponent)}}});
System.register(["angular2/core","../services/user.client.service"],function(exports_1,context_1){"use strict";var core_1,user_client_service_1,PrivateComponent,__decorate=(context_1&&context_1.id,this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=3>c?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(3>c?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}),__metadata=this&&this.__metadata||function(k,v){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(k,v):void 0};return{setters:[function(core_1_1){core_1=core_1_1},function(user_client_service_1_1){user_client_service_1=user_client_service_1_1}],execute:function(){PrivateComponent=function(){function PrivateComponent(_service){this._service=_service}return PrivateComponent.prototype.ngOnInit=function(){this._service.checkCredentials()},PrivateComponent.prototype.logout=function(){this._service.logout()},PrivateComponent=__decorate([core_1.Component({selector:"login-form",providers:[user_client_service_1.AuthenticationService],template:'\n            <div class="container" >\n                <div class="content">\n                    <span>Congratulations, you have successfully logged in!!</span>\n                    <br />\n                    <a (click)="logout()" href="#">Click Here to logout</a>\n                </div>\n            </div>\n    	'}),__metadata("design:paramtypes",[user_client_service_1.AuthenticationService])],PrivateComponent)}(),exports_1("PrivateComponent",PrivateComponent)}}});
System.register(["angular2/core","../services/user.client.service","angular2/router"],function(exports_1,context_1){"use strict";var core_1,user_client_service_1,router_1,LoginComponent,__decorate=(context_1&&context_1.id,this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=3>c?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(3>c?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}),__metadata=this&&this.__metadata||function(k,v){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(k,v):void 0};return{setters:[function(core_1_1){core_1=core_1_1},function(user_client_service_1_1){user_client_service_1=user_client_service_1_1},function(router_1_1){router_1=router_1_1}],execute:function(){LoginComponent=function(){function LoginComponent(_service){this._service=_service,this.user=new user_client_service_1.User("",""),this.errorMsg=""}return LoginComponent.prototype.login=function(){this._service.login(this.user)||(this.errorMsg="Failed to login")},LoginComponent=__decorate([core_1.Component({selector:"login-form",providers:[user_client_service_1.AuthenticationService],directives:[router_1.ROUTER_DIRECTIVES],template:'\n        <div class="container" >\n            <div class="title">\n                Torch MeanJs Starter with Angular 2 \n            </div>\n            <div class="panel-body">\n                <div class="row">\n                    <div class="col-md-12">\n                        <div class="col-md-6">\n                            <label for="email">Username</label>\n                        </div>\n                        <div class="input-field col-md-6">\n                            <input [(ngModel)]="user.username" id="email" \n                                type="email" class="validate">\n                        </div>\n                    </div> \n                </div>\n                 <div class="row">\n                    <div class="col-md-12">\n                        <div class="col-md-6">\n                            <label for="password">Password</label>\n                        </div>\n                        <div class="input-field col-md-6">\n                            <input [(ngModel)]="user.password" id="password" \n                                type="password" class="validate">\n                        </div>\n                    </div> \n                </div>\n\n                <span>{{errorMsg}}</span>\n                <br/>\n                <button (click)="login()" \n                    class="btn" \n                    type="submit" name="action">Sign in</button>\n                <button\n                    class="btn" \n                    [routerLink]="[\'Home\']">Create Account</button>\n            </div>\n        </div>\n    	'}),__metadata("design:paramtypes",[user_client_service_1.AuthenticationService])],LoginComponent)}(),exports_1("LoginComponent",LoginComponent)}}});
System.register(["angular2/core","angular2/router","angular2/http","rxjs/Rx"],function(exports_1,context_1){"use strict";var core_1,router_1,http_1,User,AuthenticationService,__decorate=(context_1&&context_1.id,this&&this.__decorate||function(decorators,target,key,desc){var d,c=arguments.length,r=3>c?target:null===desc?desc=Object.getOwnPropertyDescriptor(target,key):desc;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)r=Reflect.decorate(decorators,target,key,desc);else for(var i=decorators.length-1;i>=0;i--)(d=decorators[i])&&(r=(3>c?d(r):c>3?d(target,key,r):d(target,key))||r);return c>3&&r&&Object.defineProperty(target,key,r),r}),__metadata=this&&this.__metadata||function(k,v){return"object"==typeof Reflect&&"function"==typeof Reflect.metadata?Reflect.metadata(k,v):void 0};return{setters:[function(core_1_1){core_1=core_1_1},function(router_1_1){router_1=router_1_1},function(http_1_1){http_1=http_1_1},function(_1){}],execute:function(){User=function(){function User(username,password){this.username=username,this.password=password}return User}(),exports_1("User",User),AuthenticationService=function(){function AuthenticationService(_router,_http){this._router=_router,this._http=_http}return AuthenticationService.prototype.logout=function(){localStorage.removeItem("user"),this._router.navigate(["Login"])},AuthenticationService.prototype.login=function(user){var _this=this,headers=new http_1.Headers;headers.append("Content-Type","application/json"),this._http.post("auth/signin",JSON.stringify(user),{headers:headers}).map(function(res){return res.json()}).subscribe(function(data){return _this.saveLogin(data)},function(err){return _this.logError(err)},function(){return _this.completeLogin()})},AuthenticationService.prototype.saveLogin=function(loginData){console.log(loginData),localStorage.setItem("user",loginData)},AuthenticationService.prototype.completeLogin=function(){this._router.navigate(["Home"])},AuthenticationService.prototype.checkCredentials=function(){null===localStorage.getItem("user")&&this._router.navigate(["Login"])},AuthenticationService.prototype.logError=function(err){console.error("There was an error: "+err)},AuthenticationService=__decorate([core_1.Injectable(),__metadata("design:paramtypes",[router_1.Router,http_1.Http])],AuthenticationService)}(),exports_1("AuthenticationService",AuthenticationService)}}});