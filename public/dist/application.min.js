/*! wildfire Version: 0.1.0 */
"use strict";var ApplicationConfiguration=function(){var applicationModuleName="wildfireApp",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","textAngular","leaflet-directive","leaflet-directive.ext.d3.hexbin","leaflet-directive.ext.d3.ping","leaflet-directive.ext.filter","sentio.realtime","sentio","btford.socket-io"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();
"use strict";angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider","$logProvider",function($locationProvider,$logProvider){$locationProvider.hashPrefix("!"),$logProvider.debugEnabled(!1)}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])});
"use strict";ApplicationConfiguration.registerModule("alerts");
"use strict";ApplicationConfiguration.registerModule("channels");
"use strict";ApplicationConfiguration.registerModule("core");
"use strict";ApplicationConfiguration.registerModule("groups");
"use strict";ApplicationConfiguration.registerModule("users");
"use strict";ApplicationConfiguration.registerModule("asymmetrik.util");
"use strict";ApplicationConfiguration.registerModule("wildfire");
"use strict";angular.module("alerts").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("alert-list-all",{url:"/channel:channelId/alerts",templateUrl:"app/alerts/views/list-alerts.client.view.html",data:{mode:"all",roles:["user"]}}).state("alert-list-user",{url:"/channel:channelId/user:userId/alerts",templateUrl:"app/alerts/views/list-alerts.client.view.html",data:{mode:"user",roles:["user"]}}).state("alert-create",{url:"/channel:channelId/alert/create",templateUrl:"app/alerts/views/manage-alert.client.view.html",data:{roles:["user"]}}).state("alert-edit",{url:"/channel:channelId/alert:alertId/edit",templateUrl:"app/alerts/views/manage-alert.client.view.html",data:{roles:["user"]}})}]);
"use strict";angular.module("alerts").controller("AlertActivityController",["$scope","$log","$timeout","$window","$modalInstance","leafletData","Authentication","authService","alertService","channelService","urlHandlerService","config","channel","data",function($scope,$log,$timeout,$window,$modalInstance,leafletData,Authentication,authService,alertService,channelService,urlHandlerService,config,channel,data){function getMarkers(payloads){var markers=[];return payloads.forEach(function(element){if(markers.length<=200&&null!=element.g&&null!=element.g.coordinates&&2===element.g.coordinates.length){var filter=$scope.data.timeline.filter,noFilter=null==filter||0===filter.length||filter[0],ts=element.t;(noFilter||filter[1]<=ts&&filter[2]>=ts)&&markers.push({lat:element.g.coordinates[1],lng:element.g.coordinates[0],message:'"'+element.tx+'" -- Posted by: '+element.u+" to "+element.s+" on "+element.t})}}),markers}function resizeMap(){leafletData.getMap(mapName).then(function(map){if(map.invalidateSize(),!mapInitialized){var shape=channelService.getShape(channel.geo),mapBounds=channelService.getBounds(shape,1.25);null!=mapBounds&&map.fitBounds(mapBounds),mapInitialized=!0}})}$scope.auth=Authentication,$scope.alert=data.alert,$scope.isAlert=null!=$scope.alert;var mapInitialized=!1,mapName=$scope.isAlert?"alertActivityMap":"termMap";$scope.activity={selected:void 0,sort:alertService.activitySort,results:{elements:[],pageNumber:0,pageSize:0,totalPages:0,totalSize:0},options:{pageNumber:0,pageSize:10,sort:alertService.activitySort.start},applySearch:function(){null!=$scope.alert&&alertService.getActivity($scope.alert._id,{page:$scope.activity.options.pageNumber,size:$scope.activity.options.pageSize,sort:$scope.activity.options.sort.sort,dir:$scope.activity.options.sort.dir}).then(function(result){if(null!=result){var newElements=[];result.elements.forEach(function(element){null!=element.end&&(element.start=new Date(element.start),element.end=new Date(element.end),element.duration=element.end-element.start,newElements.push(element))}),$scope.activity.results.elements=newElements,$scope.activity.results.pageNumber=result.pageNumber,$scope.activity.results.pageSize=result.pageSize,$scope.activity.results.totalPages=result.totalPages,$scope.activity.results.totalSize=result.totalSize}})}},$scope.data={payloads:[],term:data.term,interval:data.interval,sort:alertService.activityDataSort,results:{elements:[],pageNumber:0,pageSize:0,totalPages:0,totalSize:0},options:{pageNumber:0,pageSize:5,sort:alertService.activityDataSort.date},timeline:{data:[],filter:void 0,xExtent:void 0,map:{}},map:{filter:{},markers:[],layers:{baselayers:config.map.baselayers}},applySearch:function(){if(null!=$scope.alert&&null!=$scope.activity.selected){var q;null!=$scope.data.timeline.filter&&$scope.data.timeline.filter.length>1&&$scope.data.timeline.filter[0]!==!0&&(q={"d.t":{gte:new Date($scope.data.timeline.filter[1]),lte:new Date($scope.data.timeline.filter[2])}}),alertService.getActivityData($scope.alert._id,$scope.activity.selected._id,{page:$scope.data.options.pageNumber,size:$scope.data.options.pageSize,sort:$scope.data.options.sort.sort,dir:$scope.data.options.sort.dir},q).then(function(result){if(null!=result){var newElements=[];result.elements.forEach(function(element){null!=element&&null!=element.d&&(element.d.t=new Date(element.d.t),newElements.push(element))}),$scope.data.results.elements=newElements,$scope.data.results.pageNumber=result.pageNumber,$scope.data.results.pageSize=result.pageSize,$scope.data.results.totalPages=result.totalPages,$scope.data.results.totalSize=result.totalSize}})}else if(null!=$scope.data.term){var end=1e3*Math.floor(Date.now()/1e3),start=end-60*$scope.data.interval*1e3;null!=$scope.data.timeline.filter&&$scope.data.timeline.filter.length>1&&$scope.data.timeline.filter[0]!==!0&&(start=$scope.data.timeline.filter[1],end=$scope.data.timeline.filter[2]),channelService.getChannelData(channel._id,start,end,$scope.data.term,{page:$scope.data.options.pageNumber,size:$scope.data.options.pageSize,sort:$scope.data.options.sort.sort,dir:$scope.data.options.sort.dir}).then(function(result){if(null!=result){var newElements=[];result.elements.forEach(function(element){null!=element&&null!=element.d&&(element.d.t=new Date(element.d.t),newElements.push(element))}),$scope.data.results.elements=newElements,$scope.data.results.pageNumber=result.pageNumber,$scope.data.results.pageSize=result.pageSize,$scope.data.results.totalPages=result.totalPages,$scope.data.results.totalSize=result.totalSize}})}else $scope.data.results.elements=[],$scope.data.results.pageNumber=0,$scope.data.results.pageSize=0,$scope.data.results.totalPages=0,$scope.data.results.totalSize=0},getAllActivity:function(){if(null!=$scope.alert&&null!=$scope.activity.selected)alertService.getActivityData($scope.alert._id,$scope.activity.selected._id,{page:0,size:2e3,sort:$scope.data.options.sort.sort,dir:$scope.data.options.sort.dir}).then(function(result){if(null!=result){var payloads=[];result.elements.forEach(function(element){null!=element&&null!=element.d&&(element.d.t=new Date(element.d.t),payloads.push(element.d))}),$scope.data.payloads=payloads}});else if(null!=$scope.data.term){var now=1e3*Math.floor(Date.now()/1e3),lwm=now-60*$scope.data.interval*1e3;channelService.getChannelData(channel._id,lwm,now,$scope.data.term,{page:0,size:2e3,sort:$scope.data.options.sort.sort,dir:$scope.data.options.sort.dir}).then(function(result){if(null!=result){var payloads=[];result.elements.forEach(function(element){null!=element&&null!=element.d&&(element.d.t=new Date(element.d.t),payloads.push(element.d))}),$scope.data.payloads=payloads}$scope.data.timeline.xExtent=[lwm,now]})}else $scope.data.payloads=[]}},$scope.configureTimeline=function(timeline){timeline.xScale(d3.time.scale.utc());var customTimeFormat=d3.time.format.utc.multi([[".%L",function(d){return d.getMilliseconds()}],[":%S",function(d){return d.getSeconds()}],["%H:%M",function(d){return d.getMinutes()}],["%H",function(d){return d.getHours()}],["%a %d",function(d){return d.getDay()&&1!==d.getDate()}],["%b %d",function(d){return 1!==d.getDate()}],["%B",function(d){return d.getMonth()}],["%Y",function(){return!0}]]);timeline.xAxis().tickFormat(customTimeFormat),timeline.yAxis().ticks(2).tickFormat(d3.format("d"))},$scope.setTimelineFilter=function(filterState){$scope.data.timeline.filter=filterState,$scope.data.applySearch(),$scope.data.map.markers=getMarkers($scope.data.payloads)},$scope.setActivity=function(activity){null==activity||null!=$scope.activity.selected&&$scope.activity.selected._id===activity._id?($scope.activity.selected=void 0,$log.info("Selected Activity: undefined")):($scope.data.options.pageNumber=0,$scope.activity.selected=activity,$log.info("Selected Activity: "+$scope.activity.selected._id))},$scope.goToPage=function(config,pageNumber){config.options.pageNumber=Math.min(config.results.totalPages-1,Math.max(pageNumber,0)),config.applySearch()},$scope.closeAction=function(){$modalInstance.dismiss()},$scope.$watch("activity.selected",function(){$scope.changeActivity()}),$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.changeActivity()},$scope.changeActivity=function(){$scope.data.applySearch(),$scope.data.getAllActivity(),$scope.data.lastTerm=$scope.data.term},$scope.refreshActivity=function(){$scope.data.term=$scope.data.lastTerm,$scope.changeActivity()},$scope.$watch("data.payloads",function(n){var markers=[],timelineData=[];if(null!=n){markers=getMarkers($scope.data.payloads);var tsExtent=[Number.POSITIVE_INFINITY,Number.NEGATIVE_INFINITY];$scope.data.payloads.forEach(function(element){tsExtent[0]>element.t.getTime()&&(tsExtent[0]=element.t.getTime()),tsExtent[1]<element.t.getTime()&&(tsExtent[1]=element.t.getTime())});var now=Date.now();tsExtent[0]===Number.POSITIVE_INFINITY&&(tsExtent[0]=now-6e4),tsExtent[1]===Number.NEGATIVE_INFINITY&&(tsExtent[1]=now),tsExtent[1]<tsExtent[0]&&(tsExtent[1]=tsExtent[0]),tsExtent[0]===tsExtent[1]&&(tsExtent[0]=tsExtent[1]-6e4);for(var points=300,pointPad=10,interval=(tsExtent[1]-tsExtent[0])/(points-2*pointPad),i=0;points>i;i++)timelineData.push([tsExtent[0]+interval*i-interval*pointPad,0]);$scope.data.payloads.forEach(function(element){var index=Math.floor((element.t-tsExtent[0])/interval)+pointPad;index>=0&&index<timelineData.length&&(timelineData[index][1]+=1)})}$scope.data.timeline.data=timelineData,$scope.data.map.markers=markers}),$scope.showGeoTab=function(){$timeout(resizeMap,250)},$scope.urlClickHandler=function(url){$log.info("Handling click: "+url),urlHandlerService.handleUrl(url)},$scope.isAlert?$scope.activity.applySearch($scope.alert):($timeout(resizeMap,250),null!=$scope.data.term&&$scope.data.applySearch()),leafletData.getMap(mapName).then(function(map){var shape=channelService.getShape(channel.geo),shapeBounds=channelService.getBounds(shape);null!=shapeBounds&&L.rectangle(shapeBounds,{color:"#000",weight:1}).addTo(map)})}]);
"use strict";angular.module("alerts").controller("ListAlertsController",["$scope","$location","$state","$stateParams","$log","Authentication","authService","alertService",function($scope,$location,$state,$stateParams,$log,Authentication,authService,alertService){$scope.channelId=$stateParams.channelId,$scope.auth=Authentication,$scope.alerts=[],$scope.search="",$scope.sort=alertService.sort,$scope.results={pageNumber:0,pageSize:0,totalPages:0,totalSize:0},$scope.options={pageNumber:0,pageSize:12,sort:$scope.sort.date},$scope.mode={user:"user"===$state.current.data.mode,all:"all"===$state.current.data.mode},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=Math.min($scope.results.totalPages-1,Math.max(pageNumber,0)),$scope.applySearch()},$scope.setPageSize=function(pageSize){$scope.options.pageSize=pageSize,$scope.applySearch()},$scope.setSort=function(sort){$scope.options.sort=sort,$scope.applySearch()},$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.applySearch()},$scope.applySearch=function(){var query={channel:$scope.channelId};$scope.mode.user&&(query.creator=$scope.auth.user._id),alertService.search(query,$scope.search,{page:$scope.options.pageNumber,size:$scope.options.pageSize,sort:$scope.options.sort.sort,dir:$scope.options.sort.dir}).then(function(result){null!=result?($scope.alerts=result.elements,$scope.results.pageNumber=result.pageNumber,$scope.results.pageSize=result.pageSize,$scope.results.totalPages=result.totalPages,$scope.results.totalSize=result.totalSize):$scope.alerts=[]},function(error){$log.error(error)})},$scope.mode.user?($scope.title="My Alerts",$scope.subtitle="Browse and search your alerts"):($scope.title="All Alerts",$scope.subtitle="Browse and search all alerts to which you have access"),$scope.applySearch()}]);
"use strict";angular.module("alerts").controller("ManageAlertController",["$scope","$http","$location","$stateParams","$log","$modalInstance","Authentication","authService","alertService","alertId",function($scope,$http,$location,$stateParams,$log,$modalInstance,Authentication,authService,alertService,alertId){$scope.auth=Authentication,$scope.terms={input:""},$scope.mode={create:null==alertId,edit:null!=alertId},$scope.periodMultipliers=[{name:"Seconds",multiplier:1e3},{name:"Minutes",multiplier:6e4}],$scope.timePeriod=$scope.periodMultipliers[0],$scope.setTimePeriod=function(m){$scope.timePeriod=m},$scope.mode.edit?($scope.title="Edit Alert",$scope.subtitle="Modify and save the alert criteria",$scope.okButtonText="Save",alertService.get(alertId).then(function(result){if($scope.alert=result,null!=$scope.alert.timePeriod){for(var index=0,max=0,i=0;i<$scope.periodMultipliers.length;i++)$scope.alert.timePeriod>$scope.periodMultipliers[i].multiplier&&$scope.periodMultipliers[i].multiplier>max&&(index=i,max=$scope.periodMultipliers[i].multiplier);$scope.timePeriod=$scope.periodMultipliers[index],$scope.timeValue=$scope.alert.timePeriod/max}},function(error){$log.error(error)})):($scope.title="Create Alert",$scope.subtitle="Provide the alert criteria",$scope.okButtonText="Create",$scope.alert={}),$scope.addKeyPressFn=function(keyEvent){13===keyEvent.which&&$scope.addFn()},$scope.addFn=function(){null==$scope.alert.terms&&($scope.alert.terms=[]),$scope.alert.terms.push($scope.terms.input),$scope.terms.input=""},$scope.deleteFn=function(term,index){$scope.alert.terms.splice(index,1)},$scope.okAction=function(timePeriod){null!=$scope.alert&&($scope.alert.timePeriod=timePeriod),$modalInstance.close({type:"accept",alert:$scope.alert})},$scope.deleteAction=function(){$modalInstance.close({type:"delete",alert:$scope.alert})},$scope.cancelAction=function(){$modalInstance.dismiss()}}]);
"use strict";angular.module("alerts").service("alertService",["$http","$q",function($http,$q){function create(alert){var request=$http({method:"post",url:"alert",data:alert});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"alert/"+id});return request.then(handleSuccess,handleFailure)}function update(alert){var request=$http({method:"post",url:"alert/"+alert._id,data:alert});return request.then(handleSuccess,handleFailure)}function remove(id){var request=$http({method:"delete",url:"alert/"+id});return request.then(handleSuccess,handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"alerts",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function getLatestActivity(channelId){var request=$http({method:"post",url:"alertsLatestActivity/"+channelId});return request.then(handleSuccess,handleFailure)}function getActivity(alertId,pageable){var request=$http({method:"post",url:"alert/"+alertId+"/activity",params:pageable});return request.then(handleSuccess,handleFailure)}function getActivityData(alertId,activityId,pageable,q){var request=$http({method:"post",url:"alert/"+alertId+"/activity/"+activityId,params:pageable,data:{q:q}});return request.then(handleSuccess,handleFailure)}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data.message:"An unknown error occurred.")}return{sort:{date:{label:"Date",sort:"created",dir:"DESC"},title:{label:"Title",sort:"title_lowercase",dir:"ASC"},relevance:{label:"Relevance",sort:"score",dir:"DESC"}},activitySort:{start:{label:"Start",sort:"start",dir:"DESC"},end:{label:"End",sort:"end",dir:"DESC"},count:{label:"Event Count",sort:"cumulativeCount",dir:"DESC"}},activityDataSort:{date:{label:"Date",sort:"d.t",dir:"DESC"},source:{label:"Source",sort:"d.s",dir:"ASC"}},create:create,get:get,update:update,remove:remove,search:search,getLatestActivity:getLatestActivity,getActivity:getActivity,getActivityData:getActivityData}}]);
"use strict";angular.module("alerts").directive("wfAlert",["$log","$modal","configService",function($log,$modal,configService){return{restrict:"A",templateUrl:"app/alerts/views/alert.client.view.html",scope:{alert:"=wfAlert",channel:"=wfChannel",edit:"&wfEditFn"},link:function(){},controller:["$scope",function($scope){$scope.expanded=!1,$scope.toggleExpanded=function(){$scope.expanded=!$scope.expanded},$scope.openDetails=function(channel,alert){var modal=$modal.open({templateUrl:"app/alerts/views/alert-activity.client.view.html",controller:"AlertActivityController",windowClass:"modal-fs",backdrop:"static",resolve:{config:function(){return configService.getConfig()},channel:function(){return channel},data:function(){return{alert:alert}}}});modal.result.then(function(){})}}]}}]);
"use strict";angular.module("channels").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("channel-list-all",{url:"/channels",templateUrl:"app/channels/views/list-channels.client.view.html",data:{mode:"all",roles:["user"]}}).state("channel-list-user",{url:"/user:userId/channels",templateUrl:"app/channels/views/list-channels.client.view.html",data:{mode:"user",roles:["user"]}}).state("channel-create",{url:"/channel/create",templateUrl:"app/channels/views/manage-channel.client.view.html",data:{roles:["user","editor"]}}).state("channel-edit",{url:"/channel:channelId/edit",templateUrl:"app/channels/views/manage-channel.client.view.html",data:{roles:["user","editor"]}}).state("channel-view",{url:"/channel:channelId",templateUrl:"app/channels/views/view-channel.client.view.html",controller:"ViewChannelController",data:{roles:["user"]},resolve:{config:["configService",function(configService){return configService.getConfig()}]}})}]);
"use strict";angular.module("channels").controller("ListChannelsController",["$scope","$location","$state","$stateParams","$log","Authentication","authService","channelService",function($scope,$location,$state,$stateParams,$log,Authentication,authService,channelService){$scope.auth=Authentication,$scope.channels=[],$scope.search="",$scope.sort=channelService.sort,$scope.results={pageNumber:0,pageSize:0,totalPages:0,totalSize:0},$scope.options={pageNumber:0,pageSize:12,sort:$scope.sort.date},$scope.mode={user:"user"===$state.current.data.mode,all:"all"===$state.current.data.mode},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=Math.min($scope.results.totalPages-1,Math.max(pageNumber,0)),$scope.applySearch()},$scope.setPageSize=function(pageSize){$scope.options.pageSize=pageSize,$scope.applySearch()},$scope.setSort=function(sort){$scope.options.sort=sort,$scope.applySearch()},$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.applySearch()},$scope.applySearch=function(){var query;$scope.mode.user&&(query={creator:$scope.auth.user._id}),channelService.search(query,$scope.search,{page:$scope.options.pageNumber,size:$scope.options.pageSize,sort:$scope.options.sort.sort,dir:$scope.options.sort.dir}).then(function(result){null!=result?($scope.channels=result.elements,$scope.results.pageNumber=result.pageNumber,$scope.results.pageSize=result.pageSize,$scope.results.totalPages=result.totalPages,$scope.results.totalSize=result.totalSize):$scope.channels=[]},function(error){$log.error(error)})},$scope.mode.user?($scope.title="My Channels",$scope.subtitle="Browse and search your channels"):($scope.title="All Channels",$scope.subtitle="Browse and search all channels to which you have access"),$scope.applySearch()}]);
"use strict";angular.module("channels").controller("ManageChannelController",["$scope","$http","$location","$stateParams","$log","$modal","Authentication","authService","channelService","configService","Alerts","leafletData",function($scope,$http,$location,$stateParams,$log,$modal,Authentication,authService,channelService,configService,Alerts,leafletData){$scope.auth=Authentication,$scope.alertService=Alerts,$scope.channel={},$scope.map={layers:{baselayers:{initial:{name:"Default Layer",type:"xyz",url:"http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",layerOptions:{subdomains:["a","b","c"],attribution:"© OpenStreetMap contributors"}}}},controls:{filter:{shape:{}}}},configService.getConfig().then(function(result){if(null!=result.map&&result.map.baselayers){for(var k in $scope.map.layers.baselayers)delete $scope.map.layers.baselayers[k];for(k in result.map.baselayers)$scope.map.layers.baselayers[k]=result.map.baselayers[k]}}),$scope.mode={create:null==$stateParams.channelId,edit:null!=$stateParams.channelId},$scope.createFn=function(){$scope.channel.geo=channelService.getGeoJson($scope.map.controls.filter.shape),channelService.create($scope.channel).then(function(response){$location.path("channel"+response._id)},function(error){$log.error(error)})},$scope.saveFn=function(){$scope.channel.geo=channelService.getGeoJson($scope.map.controls.filter.shape),channelService.update($scope.channel).then(function(response){$location.path("channel"+response._id)},function(error){$log.error(error)})},$scope.deleteAction=function(){var params={message:'Are you sure you want to delete channel: "'+$scope.channel.title+'" ?',title:"Delete channel?",ok:"Delete",cancel:"Cancel"},dialog=$modal.open({templateUrl:"app/util/views/confirm.client.view.html",controller:"ConfirmController",$scope:$scope,backdrop:"static",resolve:{params:function(){return params}}});dialog.result.then(function(){channelService.remove($scope.channel._id).then(function(){$scope.alertService.add("Deleted channel: "+$scope.channel.title,"success"),$location.path("user"+$scope.auth.user._id+"/channels")},function(error){$scope.alertService.add(error.message)})})},$scope.getLocations=function(val){return channelService.getLocations(val).then(function(results){return null!=results&&results.length>0?results:[]})};var marker;$scope.locationSelect=function($item){var zooms={A:5,H:9,L:10,P:10,R:12,S:12,T:10,U:10,V:10};leafletData.getMap().then(function(map){null!=marker&&map.removeLayer(marker);var latlng={lat:$item.lonlat[1],lng:$item.lonlat[0]};map.panTo(latlng).setZoom(zooms[$item["class"]]),marker=L.marker(latlng).addTo(map)})},$scope.locationFilter=function(loc){return null!=loc?loc.name+(null!=loc.state?", "+loc.state:"")+", "+loc.country:""},$scope.mode.edit?($scope.title="Edit Data Channel",$scope.subtitle="Modify and save basic channel metadata",$scope.okButtonText="Save",$scope.okAction=$scope.saveFn,channelService.get($stateParams.channelId).then(function(result){$scope.channel=result;var shape=channelService.getShape(result.geo);null!=shape&&($scope.map.controls.filter.shape=shape),leafletData.getMap().then(function(map){var bounds=channelService.getBounds(shape,1.25);null!=bounds&&map.fitBounds(bounds)})},function(error){$log.error(error)})):($scope.title="Create Data Channel",$scope.subtitle="Provide some basic metadata to establish a new data channel",$scope.okButtonText="Create",$scope.okAction=$scope.createFn)}]);
"use strict";angular.module("channels").controller("ViewChannelController",["$rootScope","$scope","$log","$stateParams","$timeout","$q","$modal","Authentication","authService","channelService","alertService","leafletData","websocket","config",function($rootScope,$scope,$log,$stateParams,$timeout,$q,$modal,Authentication,authService,channelService,alertService,leafletData,websocket,config){function loadAlerts(channelId){alertService.search({channel:channelId,creator:$scope.auth.user._id}).then(function(result){$scope.alerts.data=result.elements,null!=$scope.alerts.data&&$scope.alerts.data.length&&alertService.getLatestActivity(channelId).then(function(result2){null!=result2&&result2.length&&$scope.alerts.data.forEach(function(a){var latest=result2.filter(function(d){return d._id===a._id});null!=latest&&latest.length>0&&(a.end=latest[0].end)})},function(error){$log.error(error)})},function(error){$log.error(error)})}function initializeTimeline(){for(var interval=$scope.timeline.config.interval,delay=$scope.timeline.config.delay,now=1e3*Math.floor(Date.now()/1e3),lwm=now-(interval+delay),i=0;(interval+delay)/1e3>i;i++)$scope.timeline.data.push([new Date(lwm+1e3*i),0]);channelService.getChannelActivity($scope.channel._id,lwm,now).then(function(result){var newData=result.map(function(d){return[new Date(d._id),d.cnt]});updateTimeline(newData)});var update=function(){null!=$scope.timeline&&(updateTimeline([]),$timeout(update,$scope.timeline.config.delay/2))};update()}function updateTimeline(data){for(var now=1e3*Math.floor(Date.now()/1e3),lwm=now-($scope.timeline.config.interval+$scope.timeline.config.delay);$scope.timeline.data.length>0&&$scope.timeline.data[0][0].getTime()<=lwm;)$scope.timeline.data.shift();0===$scope.timeline.data.length&&$scope.timeline.data.push([new Date(lwm),0]);for(var lastAdded=$scope.timeline.data[$scope.timeline.data.length-1][0].getTime();now>lastAdded;)lastAdded+=1e3,$scope.timeline.data.push([new Date(lastAdded),0]);data.forEach(function(element){var ts=1e3*Math.floor(element[0].getTime()/1e3),count=element[1],indexOffset=$scope.timeline.data[0][0].getTime()/1e3,index=ts/1e3-indexOffset;index>=0&&index<$scope.timeline.data.length&&($scope.timeline.data[index][1]+=count)})}$scope.auth=Authentication,$scope.terms={interval:5,data:[]},$scope.map={filter:{},layers:{baselayers:config.map.baselayers},ping:{event:"leaflet:ping",config:{efficient:{enabled:!0,fps:12}}},hexbin:{data:[],config:{radius:8,duration:0,colorRange:["#ffffff","#3333ff"]}}},$scope.configureTimeline=function(timeline){timeline.xScale(d3.time.scale.utc());var customTimeFormat=d3.time.format.utc.multi([[".%L",function(d){return d.getMilliseconds()}],[":%S",function(d){return d.getSeconds()}],["%H:%M",function(d){return d.getMinutes()}],["%H",function(d){return d.getHours()}],["%a %d",function(d){return d.getDay()&&1!==d.getDate()}],["%b %d",function(d){return 1!==d.getDate()}],["%B",function(d){return d.getMonth()}],["%Y",function(){return!0}]]);timeline.xAxis().tickFormat(customTimeFormat),timeline.yAxis().ticks(3).tickFormat(d3.format("d"))},$scope.timeline={data:[],config:{interval:3e5,delay:5e3,efficient:{enabled:!0,fps:2},xExtent:void 0,yExtent:[0,void 0]}},$scope.alerts={data:[],map:{}},$scope.openTermSearch=function(term){var modal=$modal.open({templateUrl:"app/alerts/views/alert-activity.client.view.html",controller:"AlertActivityController",windowClass:"modal-fs",resolve:{config:function(){return config},channel:function(){return $scope.channel},data:function(){return{term:term,interval:$scope.terms.interval}}}});modal.result.then(function(){})},$scope.$watch("alerts.data",function(){$scope.alerts.map={},null!=$scope.alerts.data&&$scope.alerts.data.forEach(function(element){$scope.alerts.map[element._id]=element})}),loadAlerts($stateParams.channelId),$scope.newAlertFn=function(){$modal.open({templateUrl:"app/alerts/views/manage-alert.client.view.html",controller:"ManageAlertController",size:"lg",backdrop:"static",resolve:{alertId:function(){return void 0}}}).result.then(function(result){result.alert.channel=$scope.channel._id,alertService.create(result.alert).then(function(){loadAlerts($scope.channel._id)})})},$scope.editAlertFn=function(alert){$modal.open({templateUrl:"app/alerts/views/manage-alert.client.view.html",controller:"ManageAlertController",size:"lg",backdrop:"static",resolve:{alertId:function(){return alert._id}}}).result.then(function(result){"accept"===result.type?alertService.update(result.alert).then(function(){loadAlerts($scope.channel._id)}):"delete"===result.type&&alertService.remove(result.alert._id).then(function(){loadAlerts($scope.channel._id)})})},channelService.get($stateParams.channelId).then(function(result){$scope.channel=result,leafletData.getMap("viewChannelMap").then(function(map){var shape=channelService.getShape(result.geo),shapeBounds=channelService.getBounds(shape),mapBounds=channelService.getBounds(shape,1.25);null!=shapeBounds&&L.rectangle(shapeBounds,{color:"#000",weight:1}).addTo(map),null!=mapBounds&&$timeout(function(){map.fitBounds(mapBounds)},750)}),initializeTimeline()},function(error){$log.error(error)}),$scope.$watch("channel",function(n,o){null!=$scope.channel&&(null!=o&&channelService.unsubscribe(o._id),channelService.subscribe($scope.channel._id),$scope.$on("$stateChangeStart",function(){null!=$scope.channel&&channelService.unsubscribe($scope.channel._id)}))});var eventListener=$rootScope.$on("channel:data",function(event,payload){var timelineData=[];payload.data.forEach(function(element){if(null!=element.geo)for($scope.$broadcast("leaflet:ping",element.geo),$scope.map.hexbin.data.push(element.geo);$scope.map.hexbin.data.length>1e3;)$scope.map.hexbin.data.shift();timelineData.push([new Date(element.time.$date),1])}),updateTimeline(timelineData)});$scope.$on("$destroy",eventListener);var wordCountAnalyticListener=$rootScope.$on("channel:analytic:termcount."+60*$scope.terms.interval,function(event,data){var terms=data.map(function(d){return{term:d.t,score:d.c,termRaw:d.t.replace("#","").replace("@","")}});terms.sort(function(a,b){var cmp=b.score-a.score;return 0===cmp&&(cmp=a.termRaw.localeCompare(b.termRaw)),0===cmp&&(cmp=a.term.localeCompare(b.term)),0===cmp&&(cmp=1),cmp}),$scope.terms.data=terms});$scope.$on("$destroy",wordCountAnalyticListener);var alertListener=$rootScope.$on("channel:alert",function(event,data){var alert=$scope.alerts.map[data.id.$oid];null!=alert&&(new Date(data.end.$date)>new Date?(alert.active=!0,alert.start=new Date(data.start.$date),alert.end=null,alert.currentCount=data.currentCount,alert.cumulativeCount=data.cumulativeCount,$timeout.cancel(alert.endPromise),alert.endPromise=$timeout(function(){$rootScope.$emit("channel:alert",data)},new Date(data.end.$date)-new Date)):(alert.active=!1,alert.start=null,alert.currentCount=0,alert.cumulativeCount=data.cumulativeCount,alert.end=new Date(data.end.$date)))});$scope.$on("$destroy",alertListener)}]);
"use strict";angular.module("channels").directive("bubbleCloud",function(){return{restrict:"A",replace:!1,scope:{data:"=",label:"@",count:"@",limit:"@",barheight:"@",onClick:"&"},link:function(scope,element){function bubbleCloud(){function update(newData,width,height){function gravity(alpha){var wh=width/height,cx=width/2,cy=height/2,ax=alpha/wh,ay=alpha*wh;return function(d){return d.x+=(cx-d.x)*ax*count(d),d.y+=(cy-d.y)*ay*count(d),d.y}}function collide(jitter){return function(d){return scope.data.forEach(function(d2){if(d!==d2){var x=d.x-d2.x,y=d.y-d2.y,distance=Math.sqrt(x*x+y*y),minDistance=d.forceR+d2.forceR+collisionPadding;if(minDistance>distance){distance=(distance-minDistance)/distance*jitter;var moveX=x*distance,moveY=y*distance;return d.x-=moveX,d.y-=moveY,d2.x+=moveX,d2.y+=moveY,d2.y}}})}}function connectEvents(d){return d.on("mouseover",function(d){return node.classed("bubble-hover",function(p){return p===d})}),d.on("mouseout",function(){return node.classed("bubble-hover",!1)})}function updateNodes(){node=node.selectAll(".bubble-node").data(data,function(d){return term(d)}),node.exit().remove();var a=node.enter().append("a").attr("class","bubble-node").call(force.drag).call(connectEvents);return a.append("circle").attr("r",function(d){return rScale()(count(d))}),a.append("text").attr("class","bubble-label-name").text(function(d){return term(d)}).style("text-anchor","middle"),node.style("font-size",function(d){return Math.max(8,rScale()(count(d)/2))+"px"}).style("width",function(d){return 2.5*rScale()(count(d))+"px"}),node.append("text").text(function(d){return term(d)}).each(function(d){return d.dx=Math.max(2.5*rScale()(count(d)),this.getBoundingClientRect().width),Math.max(2.5*rScale()(count(d)),this.getBoundingClientRect().width)}).remove(),node.style("width",function(d){return d.dx+"px"}),node.each(function(d){d.dy=this.getBoundingClientRect().height}),node}data=null!=newData?newData.slice(0,scope.limit):[];var maxRadius=data.length>0?function(){var countSquared=data.map(function(d){return count(d)}).reduce(function(a,b){return a+Math.pow(b,2)});return.4*Math.sqrt(width*height/countSquared)}:function(){return 0},rScale=function(){return d3.scale.linear().range([0,maxRadius()])},maxDomainValue=d3.max(data,function(d){return count(d)});return rScale().domain([0,maxDomainValue]),force=force.gravity(0).charge(0).size([width,height]).on("tick",function(e){var dampenedAlpha=.02*e.alpha;node.each(gravity(dampenedAlpha)).each(collide(jitter)).attr("transform",function(d){return"translate("+d.x+","+d.y+")"})}),data.forEach(function(d){return d.forceR=Math.max(minCollisionRadius,rScale()(count(d))),d.forceR}),force.nodes(data).start(),updateNodes()}function my(selection){selection.each(function(d){var that=d3.select(this),width=that[0][0].offsetWidth,height=that[0][0].offsetHeight,svg=that.selectAll("svg").data([data]),svgEnter=svg.enter().append("svg");svg.attr("width",width),svg.attr("height",height),node=svgEnter.append("g").attr("id","bubble-nodes").attr("transform","translate("+margin.left+","+margin.top+")"),node.append("rect").attr("class","bubble-background").attr("width",width).attr("height",height),update(d,width,height)})}var margin={top:0,right:0,bottom:0,left:0},term=function(d){return d[scope.term]},count=function(d){return d[scope.count]},collisionPadding=2,minCollisionRadius=6,jitter=.5,data=[],node=null,force=d3.layout.force();return my.collisionPadding=function(value){return arguments.length?(collisionPadding=value,my):collisionPadding},my.minCollisionRadius=function(value){return arguments.length?(minCollisionRadius=value,my):minCollisionRadius},my.jitter=function(value){return arguments.length?(jitter=value,my):jitter},my.term=function(value){return arguments.length?(term=value,my):term},my.count=function(value){return arguments.length?(count=value,my):count},my.update=function(data,width,height){return update(data,width,height),my},my}var tCloud=bubbleCloud();d3.select(element[0]).datum(scope.data).call(tCloud),window.onresize=function(){return scope.$apply()},scope.$watch(function(){return angular.element(window)[0].innerWidth},function(){return scope.render(scope.data)}),scope.$watch("data",function(newVals){return scope.render(newVals)},!0),scope.render=function(data){var width=d3.select(element[0])[0][0].offsetWidth,height=d3.select(element[0])[0][0].offsetHeight;tCloud.update(data,width,height)}}}});
"use strict";angular.module("channels").directive("wfDynamicBarChart",function(){return{restrict:"A",scope:{data:"=",label:"@",limit:"@",barheight:"@",onClick:"&"},link:function(scope,iElement){function widthFunction(max,width){return function(d){return Math.floor(d.score/max*width)+"px"}}var barheight=null!=scope.barheight&&"string"==typeof scope.barheight?parseInt(scope.barheight):25,height=scope.limit*barheight,element=d3.select(iElement[0]).style("width","100%").style("height",height+"px");window.onresize=function(){return scope.$apply()},scope.$watch(function(){return angular.element(window)[0].innerWidth},function(){return scope.render(scope.data)}),scope.$watch("data",function(newVals){return scope.render(newVals)},!0),scope.render=function(data){var limitedData,width,max;limitedData=null!=data?data.slice(0,scope.limit):[],width=d3.select(iElement[0])[0][0].offsetWidth,max=Math.max.apply(null,limitedData.map(function(d){return d.score}));var div=element.selectAll("div.d3-bars"),divUpdate=div.data(limitedData,function(d){return d.term}),divEnter=divUpdate.enter().append("div"),divExit=divUpdate.exit();divUpdate.style("opacity",1).style("width",widthFunction(max,width)).transition().duration(750).style("top",topFunction),divUpdate.select("div.term").text(termFunction),divUpdate.select("div.count").text(countFunction),divEnter.attr("class","d3-bars").style("height",barheight).style("top",60+height+"px").on("click",function(d){scope.onClick({term:d.term})}).style("width",widthFunction(max,width)).transition().duration(750).style("top",topFunction),divEnter.append("div").attr("class","term").text(termFunction),divEnter.append("div").attr("class","count").text(countFunction),divEnter.append("i").attr("class","fa fa-search"),divExit.transition().duration(750).style("opacity",1e-4).style("top",60+height+"px").remove()};var termFunction=function(d){var s=d.term;return s},countFunction=function(d){return"("+d.score+")"},topFunction=function(d,i){return 60+barheight*i+"px"}}}});
"use strict";angular.module("channels").service("channelService",["$rootScope","$http","$q","$log","$timeout","websocket",function($rootScope,$http,$q,$log,$timeout,websocket){function create(channel){var request=$http({method:"post",url:"channel",data:channel});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"channel/"+id});return request.then(handleSuccess,handleFailure)}function update(channel){var request=$http({method:"post",url:"channel/"+channel._id,data:channel});return request.then(handleSuccess,handleFailure)}function remove(id){var request=$http({method:"delete",url:"channel/"+id});return request.then(handleSuccess,handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"channels",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function getChannelActivity(channelId,start,end){var request=$http({method:"post",url:"channel/"+channelId+"/activity",params:{channelId:channelId,start:start,end:end}});return request.then(handleSuccess,handleFailure)}function getChannelData(channelId,start,end,term,pageable){var request=$http({method:"post",url:"channel/"+channelId+"/searchData",data:{channelId:channelId,start:start,end:end,term:term},params:pageable});return request.then(handleSuccess,handleFailure)}function getLocations(val){var request=$http({method:"get",url:"locations/"+val});return request.then(handleSuccess,handleFailure)}function getGeoJson(shape){var toReturn;if(null!=shape&&null!=shape.type){var n=shape.northEast.lat,e=shape.northEast.lng,s=shape.southWest.lat,w=shape.southWest.lng;toReturn={type:"Polygon",coordinates:[[[e,n],[e,s],[w,s],[w,n],[e,n]]]}}return toReturn}function getShape(geoJson){var toReturn;if(null!=geoJson&&null!=geoJson.coordinates&&geoJson.coordinates.length>0){{var geo=geoJson.coordinates[0],ne=geo[0],sw=(geo[1],geo[2]);geo[3]}toReturn={type:"rectangle",northEast:{lat:ne[1],lng:ne[0]},southWest:{lat:sw[1],lng:sw[0]}}}return toReturn}function getBounds(shape,scale){var bounds;if(scale=null!=scale?scale-1:0,null!=shape){var height=Math.abs(shape.northEast.lat-shape.southWest.lat),width=Math.abs(shape.northEast.lng-shape.southWest.lng),ne={lat:shape.northEast.lat-scale*height,lng:shape.northEast.lng+scale*width},sw={lat:shape.southWest.lat+scale*height,lng:shape.southWest.lng-scale*width};bounds=L.latLngBounds(sw,ne)}return bounds}function subscribe(channelId){var payload={id:channelId};websocket.on("channel:payload",payloadRouterFn),websocket.on("disconnect",function(){$log.info("Socket.io: Disconnected...")}),websocket.on("reconnect",function(){$log.info("Socket.io: Reconnecting..."),websocket.removeListener("channel:payload"),websocket.removeListener("reconnect"),websocket.removeListener("disconnected"),subscribe(channelId)}),websocket.emit("channel:subscribe",payload),$log.info("Socket.io: Subscribing to channel: "+channelId)}function unsubscribe(channelId){var payload={id:channelId};websocket.emit("channel:unsubscribe",payload),websocket.removeListener("channel:payload"),websocket.removeListener("reconnect"),websocket.removeListener("disconnected"),$log.info("Socket.io: Unsubscribed from channel: "+channelId)}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data.message:"An unknown error occurred.")}function sendData(data){data.length>0&&$rootScope.$emit("channel:data",{data:data})}function payloadRouterFn(message){var now=Date.now();switch(message.t){case 0:$timeout(function(){buffer.data.push(message.p),now>=lst.data+period.data&&(sendData(buffer.data),buffer.data=[],lst.data=now)},period.data+50);break;case 1:break;case 2:$rootScope.$emit("channel:alert",message.p);break;case 3:break;case 4:$rootScope.$emit("channel:analytic:"+message.m.analyticType,message.p)}}var lst={data:0,alert:0},period={data:150,alert:0},buffer={data:[],alert:[]};return{sort:{date:{label:"Date",sort:"created",dir:"DESC"},title:{label:"Title",sort:"title_lowercase",dir:"ASC"},relevance:{label:"Relevance",sort:"score",dir:"DESC"}},create:create,get:get,update:update,remove:remove,search:search,getChannelActivity:getChannelActivity,getChannelData:getChannelData,getLocations:getLocations,getBounds:getBounds,getGeoJson:getGeoJson,getShape:getShape,subscribe:subscribe,unsubscribe:unsubscribe}}]);
"use strict";angular.module("groups").config(["$stateProvider","$urlRouterProvider",function($stateProvider){$stateProvider.state("group-list",{url:"/groups",controller:"ListGroupsController",templateUrl:"app/groups/views/list-groups.client.view.html",data:{roles:["editor"]}}).state("group-create",{url:"/group/create",controller:"ManageGroupController",templateUrl:"app/channels/views/manage-group.client.view.html",data:{roles:["editor"]}}).state("group-edit",{url:"/group:groupId/edit",controller:"ManageGroupController",templateUrl:"app/groups/views/manage-group.client.view.html",data:{roles:["editor"]}}).state("group-manage-users",{url:"/group:groupId/manage-users",controller:"ManageGroupUsersController",templateUrl:"app/groups/views/group-manage-users.client.view.html",data:{roles:["editor"]}})}]);
"use strict";angular.module("groups").controller("ListGroupsController",["$scope","$location","$state","$stateParams","$log","Authentication","authService","groupService",function($scope,$location,$state,$stateParams,$log,Authentication,authService,groupService){$scope.auth=Authentication,$scope.groups=[],$scope.search="",$scope.sort=groupService.sort,$scope.results={pageNumber:0,pageSize:0,totalPages:0,totalSize:0},$scope.options={pageNumber:0,pageSize:12,sort:$scope.sort.title},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=Math.min($scope.results.totalPages-1,Math.max(pageNumber,0)),$scope.applySearch()},$scope.setPageSize=function(pageSize){$scope.options.pageSize=pageSize,$scope.applySearch()},$scope.setSort=function(sort){$scope.options.sort=sort,$scope.applySearch()},$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.applySearch()},$scope.applySearch=function(){groupService.search(void 0,$scope.search,{page:$scope.options.pageNumber,size:$scope.options.pageSize,sort:$scope.options.sort.sort,dir:$scope.options.sort.dir}).then(function(result){null!=result?($scope.groups=result.elements,$scope.results.pageNumber=result.pageNumber,$scope.results.pageSize=result.pageSize,$scope.results.totalPages=result.totalPages,$scope.results.totalSize=result.totalSize):$scope.groups=[]},function(error){$log.error(error)})},$scope.applySearch()}]);
"use strict";angular.module("groups").controller("ManageGroupUsersController",["$scope","$location","Authentication","authService","UserConfig","Alerts",function($scope,$location,Authentication,authService,UserConfig,Alerts){$scope.auth=Authentication,$scope.config=UserConfig,$scope.alertService=Alerts}]);
"use strict";angular.module("groups").controller("ManageGroupController",["$scope","$location","$stateParams","$log","Authentication","authService","groupService","UserConfig","Alerts",function($scope,$location,$stateParams,$log,Authentication,authService,groupService,UserConfig,Alerts){$scope.auth=Authentication,$scope.config=UserConfig,$scope.alertService=Alerts,$scope.mode={create:null==$stateParams.groupId,edit:null!=$stateParams.groupId},$scope.mode.edit?($scope.title="Edit Groupl",$scope.subtitle="Modify and save basic group metadata",$scope.okButtonText="Save",$scope.okAction=$scope.saveFn,groupService.get($stateParams.groupId).then(function(result){$scope.group=result},function(error){$log.error(error)})):($scope.title="Create Group",$scope.subtitle="Provide some basic metadata to create a new group",$scope.okButtonText="Create",$scope.okAction=$scope.createFn)}]);
"use strict";angular.module("groups").service("groupService",["$http","$q","$log",function($http,$q){function create(group){var request=$http({method:"post",url:"group",data:group});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"group/"+id});return request.then(handleSuccess,handleFailure)}function update(group){var request=$http({method:"post",url:"group/"+group._id,data:group});return request.then(handleSuccess,handleFailure)}function remove(id){var request=$http({method:"delete",url:"group/"+id});return request.then(handleSuccess,handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"groups",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data.message:"An unknown error occurred.")}return{sort:{title:{label:"Title",sort:"title_lowercase",dir:"ASC"},relevance:{label:"Relevance",sort:"score",dir:"DESC"}},create:create,get:get,update:update,remove:remove,search:search}}]);
"use strict";angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","$injector","Authentication",function($q,$location,$injector,Authentication){return{responseError:function(rejection){var $state=$injector.get("$state");switch(rejection.status){case 401:Authentication.setUser(null),$state.go("auth.signin");break;case 403:"eua"===rejection.data.type?$state.go("user.eua"):$state.go("user.unauthorized",{message:"You are not authorized to access this resource.",rejection:rejection})}return $q.reject(rejection)}}}])}]).run(["$rootScope","$state","$location","$log","Authentication",function($rootScope,$state,$location,$log,Authentication){$rootScope.$on("$stateChangeError",function(event){$log.warn(event)}),$rootScope.$on("$stateNotFound",function(event){$log.warn(event)}),$rootScope.$on("$stateChangeStart",function(event,toState){$log.info("routing to: "+toState.name);var requiresAuthentication=!0;if(null!=toState.data&&toState.data.requiresAuthentication===!1&&(requiresAuthentication=!1),requiresAuthentication&&!Authentication.isAuthenticated())return event.preventDefault(),$log.info("go to user.signin"),void $state.go("auth.signin");if(Authentication.isAuthenticated()&&!Authentication.isAdmin()&&!Authentication.isEuaCurrent()&&"user.eua"!==toState.name)return event.preventDefault(),$log.info("go to user.eua"),void $state.go("user.eua");if(!Authentication.isAdmin()){var requiredRoles=null!=toState.data&&null!=toState.data.roles?toState.data.roles:[],missingRoles=[];if(requiredRoles.forEach(function(role){Authentication.hasRole(role)||missingRoles.push(role)}),missingRoles.length>0)if(Authentication.isAuthenticated()&&!Authentication.hasRole("user")){if("user.pending"!==toState.name)return event.preventDefault(),$log.info("go to user.pending"),void $state.go("user.pending")}else if("user.unauthorized"!==toState.name)return event.preventDefault(),$log.info("go to user.unauthorized"),void $state.go("user.unauthorized")}})}]);
"use strict";angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("auth",{"abstract":!0,template:"<ui-view/>",resolve:{UserConfig:["userService",function(userService){return userService.getAuthConfig()}]},data:{requiresAuthentication:!1}}).state("auth.signup",{url:"/auth/signup",controller:"ManageUserController",templateUrl:"app/users/views/manage-user.client.view.html",data:{mode:"signup"}}).state("auth.signin",{url:"/auth/signin",controller:"AuthenticationController",templateUrl:"app/users/views/authentication/signin.client.view.html"}).state("user",{"abstract":!0,template:"<ui-view/>",resolve:{UserConfig:["userService",function(userService){return userService.getAuthConfig()}]},data:{requiresAuthentication:!0}}).state("user.eua",{url:"/auth/eua",controller:"EuaController",templateUrl:"app/users/views/eua/eua.client.view.html",resolve:{UserAgreement:["authService",function(authService){return authService.getCurrentEua()}]}}).state("user.unauthorized",{url:"/auth/unauthorized",templateUrl:"app/users/views/authentication/unauthorized.client.view.html"}).state("user.pending",{url:"/auth/pending",templateUrl:"app/users/views/authentication/pending.client.view.html"}).state("user.edit",{url:"/user",controller:"ManageUserController",templateUrl:"app/users/views/manage-user.client.view.html",data:{mode:"edit",data:{roles:["user"]}}}).state("admin",{"abstract":!0,templateUrl:"app/users/views/admin.client.view.html",resolve:{UserConfig:["userService",function(userService){return userService.getAuthConfig()}]},data:{requiresAuthentication:!0,roles:["admin"]}}).state("admin.eua",{"abstract":!0,template:"<ui-view/>",data:{roles:["admin"]}}).state("admin.eua.list",{url:"/admin/euas",controller:"ListEuasController",templateUrl:"app/users/views/eua/list-euas.client.view.html",data:{roles:["admin"]}}).state("admin.eua.create",{url:"/admin/eua",controller:"ManageEuaController",templateUrl:"app/users/views/eua/manage-eua.client.view.html",data:{mode:"create",roles:["admin"]}}).state("admin.eua.edit",{url:"/admin/eua/:euaId",controller:"ManageEuaController",templateUrl:"app/users/views/eua/manage-eua.client.view.html",data:{mode:"edit",roles:["admin"]}}).state("admin.user",{"abstract":!0,template:"<ui-view/>",data:{roles:["admin"]}}).state("admin.user.list",{url:"/admin/users",controller:"ListUsersController",templateUrl:"app/users/views/list-users.client.view.html",data:{roles:["admin"]}}).state("admin.user.create",{url:"/admin/user",controller:"ManageUserController",templateUrl:"app/users/views/manage-user.client.view.html",data:{mode:"admin-create",roles:["admin"]}}).state("admin.user.edit",{url:"/admin/user/:userId",controller:"ManageUserController",templateUrl:"app/users/views/manage-user.client.view.html",data:{mode:"admin-edit",roles:["admin"]}}).state("auth.password",{"abstract":!0,template:"<ui-view/>",resolve:{UserConfig:["userService",function(userService){return userService.getAuthConfig()}]},data:{strategy:"local"}}).state("auth.password.forgot",{url:"/auth/password/forgot",controller:"PasswordController",templateUrl:"app/users/views/password/forgot-password.client.view.html"}).state("auth.password.reset-invalid",{url:"/auth/password/reset/invalid",templateUrl:"app/users/views/password/reset-password-invalid.client.view.html"}).state("auth.password.reset-success",{url:"/auth/password/reset/success",templateUrl:"app/users/views/password/reset-password-success.client.view.html"}).state("auth.password.reset",{url:"/auth/password/reset/:token",controller:"PasswordController",templateUrl:"app/users/views/password/reset-password.client.view.html"})}]);
"use strict";angular.module("users").controller("AuthenticationController",["$scope","$location","Authentication","authService","UserConfig","Alerts",function($scope,$location,Authentication,authService,UserConfig,Alerts){$scope.auth=Authentication,$scope.config=UserConfig,$scope.alertService=Alerts,$scope.auth.isAuthenticated()&&$location.path("/"),$scope.signup=function(){if($scope.newPassword!==$scope.verifyPassword)return void $scope.alertService.addAlert("Passwords do not match.");var user={name:$scope.user.name,email:$scope.user.email,username:$scope.user.username,password:$scope.newPassword};authService.signup(user).then(function(){$location.path("/")},function(error){$scope.alertService.addAlert(error.message)})},$scope.signin=function(){authService.signin($scope.credentials).then(function(){$location.path("/")},function(error){$scope.error=error.message})}}]);
"use strict";angular.module("users").controller("EuaController",["$scope","$location","$log","Authentication","authService","Alerts","UserAgreement",function($scope,$location,$log,Authentication,authService,Alerts,UserAgreement){$scope.agree=!1,$scope.auth=Authentication,$scope.alertService=Alerts,$scope.eua=UserAgreement,$scope.accept=function(){authService.acceptEua().then(function(){$log.info("Accepted EUA for user."),$location.path("/")},function(error){$scope.alertService.addAlert(error.message)})}}]);
"use strict";angular.module("users").controller("ListEuasController",["$scope","$location","$log","$modal","euaService","Authentication","Alerts",function($scope,$location,$log,$modal,euaService,Authentication,Alerts){$scope.auth=Authentication,$scope.alertService=Alerts,$scope.euas=[],$scope.search="",$scope.sort=euaService.sort,$scope.results={pageNumber:0,pageSize:0,totalPages:0,totalSize:0},$scope.options={pageNumber:0,pageSize:20,sort:$scope.sort.published},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=Math.min($scope.results.totalPages-1,Math.max(pageNumber,0)),$scope.applySearch()},$scope.setPageSize=function(pageSize){$scope.options.pageSize=pageSize,$scope.applySearch()},$scope.setSort=function(sort){$scope.options.sort=sort,$scope.applySearch()},$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.applySearch()},$scope.applySearch=function(){euaService.search(void 0,$scope.search,{page:$scope.options.pageNumber,size:$scope.options.pageSize,sort:$scope.options.sort.sort,dir:$scope.options.sort.dir}).then(function(result){null!=result?($scope.euas=result.elements,$scope.results.pageNumber=result.pageNumber,$scope.results.pageSize=result.pageSize,$scope.results.totalPages=result.totalPages,$scope.results.totalSize=result.totalSize):$scope.euas=[]},function(error){$scope.alertService.add(error.message),$log.error(error)})},$scope.deleteEua=function(eua){var params={message:'Are you sure you want to delete eua: "'+eua.title+'" ?',title:"Delete eua?",ok:"Delete",cancel:"Cancel"},dialog=$modal.open({templateUrl:"app/util/views/confirm.client.view.html",controller:"ConfirmController",$scope:$scope,backdrop:"static",resolve:{params:function(){return params}}});dialog.result.then(function(){euaService.remove(eua._id).then(function(){$scope.alertService.add("Deleted eua: "+eua.title,"success"),$scope.applySearch()},function(error){$scope.alertService.add(error.message)}),$log.info("delete eua: "+eua.title)})},$scope.publishEua=function(eua){euaService.publish(eua._id).then(function(){$scope.applySearch(),$scope.alertService.add("Published "+eua.title,"success")},function(error){$scope.alertService.add(error.message)})},$scope.applySearch()}]);
"use strict";angular.module("users").controller("ListUsersController",["$scope","$location","$log","$modal","userService","adminService","Authentication","authService","UserConfig","Alerts",function($scope,$location,$log,$modal,userService,adminService,Authentication,authService,UserConfig,Alerts){$scope.auth=Authentication,$scope.config=UserConfig,$scope.alertService=Alerts,$scope.users=[],$scope.search="",$scope.sort=userService.sort,$scope.results={pageNumber:0,pageSize:0,totalPages:0,totalSize:0},$scope.options={pageNumber:0,pageSize:20,sort:$scope.sort.name},$scope.goToPage=function(pageNumber){$scope.options.pageNumber=Math.min($scope.results.totalPages-1,Math.max(pageNumber,0)),$scope.applySearch()},$scope.setPageSize=function(pageSize){$scope.options.pageSize=pageSize,$scope.applySearch()},$scope.setSort=function(sort){$scope.options.sort=sort,$scope.applySearch()},$scope.applySearchKeypress=function(keyEvent){13===keyEvent.which&&$scope.applySearch()},$scope.applySearch=function(){adminService.search(void 0,$scope.search,{page:$scope.options.pageNumber,size:$scope.options.pageSize,sort:$scope.options.sort.sort,dir:$scope.options.sort.dir}).then(function(result){null!=result?($scope.users=result.elements,$scope.results.pageNumber=result.pageNumber,$scope.results.pageSize=result.pageSize,$scope.results.totalPages=result.totalPages,$scope.results.totalSize=result.totalSize):$scope.users=[]},function(error){$scope.alertService.add(error.message),$log.error(error)})},$scope.deleteUser=function(user){var params={message:'Are you sure you want to delete user: "'+user.username+'" ?',title:"Delete user?",ok:"Delete",cancel:"Cancel"},dialog=$modal.open({templateUrl:"app/util/views/confirm.client.view.html",controller:"ConfirmController",$scope:$scope,backdrop:"static",resolve:{params:function(){return params}}});dialog.result.then(function(){adminService.remove(user._id).then(function(){$scope.alertService.add("Deleted user: "+user.username,"success"),$scope.applySearch()},function(error){$scope.alertService.add(error.message)}),$log.info("delete user: "+user.username)})},$scope.$watch("users",function(){null!=$scope.users&&$scope.users.forEach(function(user){var rolesString=null;user.roles.forEach(function(role){null==rolesString?rolesString="":rolesString+=", ",rolesString+=role}),user.rolesString=rolesString})}),$scope.applySearch()}]);
"use strict";angular.module("users").controller("ManageEuaController",["$scope","$location","$log","$stateParams","$state","euaService","Authentication","Alerts",function($scope,$location,$log,$stateParams,$state,euaService,Authentication){function createEua(){$log.info("Create eua: "+$scope.eua.title),euaService.create({title:$scope.eua.title,text:$scope.eua.text}).then(function(){$state.go("admin.eua.list")},function(error){$scope.error=error.message})}function updateEua(){$log.info("Edit user: "+$scope.eua.title),euaService.update({_id:$scope.eua._id,title:$scope.eua.title,text:$scope.eua.text,published:$scope.eua.published}).then(function(){$state.go("admin.eua.list")},function(error){$scope.error=error.message})}$scope.auth=Authentication,$scope.mode=$state.current.data.mode,"create"===$scope.mode?($scope.title="Create EUA",$scope.subtitle="Provide the required information to create a new eua",$scope.okButtonText="Create",$scope.okAction=createEua):"edit"===$scope.mode?($scope.title="Edit EUA",$scope.subtitle="Make changes to the eua's information",$scope.okButtonText="Save",$scope.okAction=updateEua,euaService.get($stateParams.euaId).then(function(result){$scope.eua=result},function(){$log.error("EUA with id: "+$stateParams.euaId+" does not exist.")})):($scope.user={},$log.error("Invalid mode"))}]);
"use strict";angular.module("users").controller("ManageUserController",["$scope","$location","$log","$stateParams","$state","userService","adminService","authService","Authentication","UserConfig","Alerts",function($scope,$location,$log,$stateParams,$state,userService,adminService,authService,Authentication,UserConfig){function initializeUser(user){return user=user||{},{name:user.name,email:user.email,username:user.username,_id:user._id,roles:adminService.generateClientRoles(user.roles)}}function createUserAdmin(){return $log.info("Create user: "+$scope.user.username),$scope.password!==$scope.verifyPassword?void($scope.error="Passwords do not match"):void adminService.create({username:$scope.user.username,name:$scope.user.name,email:$scope.user.email,roles:adminService.generateServerRoles($scope.user.roles),password:$scope.password}).then(function(){$state.go("admin.user.list")},function(error){$scope.error=error.message})}function updateUserAdmin(){return $log.info("Edit user: "+$scope.user.username),$scope.password!==$scope.verifyPassword?void($scope.error="Passwords do not match"):void adminService.update({_id:$scope.user._id,username:$scope.user.username,name:$scope.user.name,email:$scope.user.email,roles:adminService.generateServerRoles($scope.user.roles),password:$scope.password}).then(function(){$state.go("admin.user.list")},function(error){$scope.error=error.message})}function createUser(){return $log.info("Signup user: "+$scope.user.username),$scope.password!==$scope.verifyPassword?void($scope.error="Passwords do not match"):void authService.signup({username:$scope.user.username,name:$scope.user.name,email:$scope.user.email,roles:adminService.generateServerRoles($scope.user.roles),password:$scope.password}).then(function(){$location.path("/")},function(error){$scope.error=error.message})}function updateUser(){return $log.info("Update user: "+$scope.user.username),$scope.password!==$scope.verifyPassword?void($scope.error="Passwords do not match."):void userService.update({username:$scope.user.username,name:$scope.user.name,email:$scope.user.email,password:$scope.password,currentPassword:$scope.currentPassword}).then(function(){$location.path("/")},function(error){$scope.error=error.message})}$scope.auth=Authentication,$scope.config=UserConfig,$scope.mode=$state.current.data.mode,"admin-create"===$scope.mode?($scope.title="Create User",$scope.subtitle="Provide the required information to create a new user",$scope.okButtonText="Create",$scope.okAction=createUserAdmin,$scope.user=initializeUser({})):"admin-edit"===$scope.mode?($scope.title="Edit User",$scope.subtitle="Make changes to the user's information",$scope.okButtonText="Save",$scope.okAction=updateUserAdmin,adminService.get($stateParams.userId).then(function(result){$scope.user=initializeUser(result)},function(){$log.error("User with id: "+$stateParams.userId+" does not exist.")})):"signup"===$scope.mode?($scope.title="New Account Request",$scope.subtitle="Provide the required information to request an account",$scope.okButtonText="Submit",$scope.okAction=createUser,$scope.user=initializeUser({})):"edit"===$scope.mode?($scope.title="Edit Profile",$scope.subtitle="Make changes to your profile information",$scope.okButtonText="Save",$scope.okAction=updateUser,$scope.user=initializeUser($scope.auth.user)):($scope.user={},$log.error("Invalid mode"))}]);
"use strict";angular.module("users").controller("PasswordController",["$scope","$stateParams","$state","$location","$log","Authentication","authService","UserConfig",function($scope,$stateParams,$state,$location,$log,Authentication,authService,UserConfig){$scope.auth=Authentication,$scope.config=UserConfig,$scope.error=null,$scope.success=null,$scope.pending=null,$scope.invalid=!1,$scope.auth.isAuthenticated()&&$location.path("/"),"local"!==$scope.config.auth&&$location.path("/"),null!=$stateParams.token&&authService.validateToken($stateParams.token).then(function(){$scope.invalid=!1},function(){$scope.invalid=!0}),$scope.requestPasswordReset=function(){return $scope.success=$scope.error=null,$scope.pending="Processing request...",null==$scope.username?void($scope.error="Missing username."):($log.info("Requesting password reset for user: "+$scope.username),void authService.forgotPassword($scope.username).then(function(result){$scope.username=null,$scope.success=result,$scope.pending=null},function(error){$scope.error=error.message,$scope.pending=null}))},$scope.resetPassword=function(){return $scope.success=$scope.error=null,$scope.password!==$scope.verifyPassword?void($scope.error="Passwords do not match."):void authService.resetPassword($stateParams.token,$scope.password).then(function(){$scope.password=null,$scope.verifyPassword=null,$state.go("auth.password.reset-success")},function(error){$scope.error=error.message})}}]);
"use strict";angular.module("users").controller("SettingsController",["$scope","$location","Authentication","authService","userService",function($scope,$location,Authentication,authService,userService){$scope.auth=Authentication,$scope.user=$scope.auth.user,$scope.updateUserProfile=function(isValid){isValid?($scope.success=$scope.error=null,userService.update($scope.user).then(function(response){$scope.success=!0,$scope.auth.user=response,$scope.user=response},function(error){$scope.error=error.message})):$scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,authService.updatePassword($scope.passwordDetails).then(function(){$scope.success=!0,$scope.passwordDetails=null},function(error){$scope.error=error.message})}}]);
"use strict";angular.module("users").factory("adminService",["$http","$q","$log",function($http,$q){function create(user){var request=$http({method:"post",url:"admin/user",data:user});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"admin/user/"+id});return request.then(handleSuccess,handleFailure)}function update(user){var request=$http({method:"post",url:"admin/user/"+user._id,data:user});return request.then(handleSuccess,handleFailure)}function remove(id){var request=$http({method:"delete",url:"admin/user/"+id});return request.then(handleSuccess,handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"admin/users",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function generateServerRoles(roles){var toReturn=[];return null!=roles&&roles.forEach(function(element){element.selected&&null!=allRoles.map[element.role]&&toReturn.push(element.role)}),toReturn}function generateClientRoles(roles){var current={};null!=roles&&roles.forEach(function(element){current[element]=element});var toReturn=[];return allRoles.list.forEach(function(element){toReturn.push({label:element.label,role:element.role,selected:null!=current[element.role]})}),toReturn}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data:{message:"An unknown error occurred."})}var allRoles={map:{user:{label:"User",role:"user"},editor:{label:"Editor",role:"editor"},admin:{label:"Admin",role:"admin"}}};return allRoles.list=[allRoles.map.user,allRoles.map.editor,allRoles.map.admin],{create:create,get:get,update:update,remove:remove,search:search,generateServerRoles:generateServerRoles,generateClientRoles:generateClientRoles}}]);
"use strict";angular.module("users").factory("Authentication",[function(){var data={user:void 0,eua:{},roles:{}};return data.isAuthenticated=function(){return null!=data.user&&null!=data.user.username},data.hasRole=function(role){return null!=data.roles&&null!=data.roles[role]},data.isAdmin=function(){return data.hasRole("admin")},data.isEuaCurrent=function(){return null==data.eua||null==data.eua.published||null!=data.user.acceptedEua&&data.user.acceptedEua>=data.eua.published},data.setUser=function(user){data.user=user,data.roles={},null!=data.user&&null!=data.user.roles&&data.user.roles.forEach(function(role){data.roles[role]=!0})},data.setEua=function(eua){data.eua=eua},data.setUser(window.user),data}]),angular.module("users").factory("authService",["$http","$q","$log","Authentication",function($http,$q,$log,Authentication){function getCurrentEua(){var request=$http({method:"get",url:"eua"});return request.then(function(result){return result.data},handleFailure)}function acceptEua(){var request=$http({method:"post",url:"eua/accept"}),defer=$q.defer();return request.then(function(userResult){Authentication.setUser(userResult.data),getCurrentEua().then(function(euaResult){Authentication.setEua(euaResult),defer.resolve(userResult.data)},handleFailure)},handleFailure),defer.promise}function signup(user){var request=$http({method:"post",url:"auth/signup",data:user}),defer=$q.defer();return request.then(function(userResult){Authentication.setUser(userResult.data),getCurrentEua().then(function(euaResult){Authentication.setEua(euaResult),defer.resolve(userResult.data)},handleFailure)},handleFailure),defer.promise}function signin(credentials){var request=$http({method:"post",url:"auth/signin",data:credentials}),defer=$q.defer();return request.then(function(userResult){Authentication.setUser(userResult.data),getCurrentEua().then(function(euaResult){Authentication.setEua(euaResult),defer.resolve(userResult.data)},handleFailure)},handleFailure),defer.promise}function signout(){var request=$http({method:"get",url:"auth/signout"});return request.then(function(response){return Authentication.setUser(null),response.data},handleFailure)}function forgotPassword(username){var request=$http({method:"post",url:"auth/forgot",data:{username:username}});return request.then(function(response){return Authentication.setUser(response.data),response.data},handleFailure)}function validateToken(token){var request=$http({method:"get",url:"auth/reset/"+token});return request.then(function(response){return response.data},handleFailure)}function resetPassword(token,password){var request=$http({method:"post",url:"auth/reset/"+token,data:{password:password}});return request.then(function(response){return Authentication.setUser(response.data),response.data},handleFailure)}function updatePassword(data){var request=$http({method:"post",url:"/auth/password",data:data});return request.then(function(response){return response.data},handleFailure)}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data:{message:"An unknown error occurred."})}return{signup:signup,signin:signin,signout:signout,forgotPassword:forgotPassword,resetPassword:resetPassword,validateToken:validateToken,updatePassword:updatePassword,getCurrentEua:getCurrentEua,acceptEua:acceptEua}}]);
"use strict";angular.module("users").factory("euaService",["$http","$q","$log",function($http,$q){function create(eua){var request=$http({method:"post",url:"eua",data:eua});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"eua/"+id});return request.then(handleSuccess,handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"euas",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function update(eua){var request=$http({method:"post",url:"eua/"+eua._id,data:eua});return request.then(handleSuccess,handleFailure)}function remove(id){var request=$http({method:"delete",url:"eua/"+id});return request.then(handleSuccess,handleFailure)}function publish(id){var request=$http({method:"post",url:"eua/"+id+"/publish"});return request.then(handleSuccess,handleFailure)}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data:{message:"An unknown error occurred."})}return{sort:{title:{label:"Name",sort:"name",dir:"ASC"},created:{label:"Created",sort:"created",dir:"DESC"},published:{label:"Published",sort:"published",dir:"DESC"},relevance:{label:"Relevance",sort:"score",dir:"DESC"}},create:create,get:get,search:search,update:update,remove:remove,publish:publish}}]);
"use strict";angular.module("users").factory("userService",["$http","$q","$log","Authentication",function($http,$q,$log,Authentication){function getAuthConfig(){var request=$http({method:"get",url:"user/config"});return request.then(handleSuccess,handleFailure)}function get(id){var request=$http({method:"get",url:"user/"+id});return request.then(handleSuccess,handleFailure)}function update(user){var request=$http({method:"post",url:"user/me",data:user});return request.then(function(response){return Authentication.setUser(response.data),response.data},handleFailure)}function search(q,s,pageable){var request=$http({method:"post",url:"users",data:{s:s,q:q},params:pageable});return request.then(handleSuccess,handleFailure)}function handleSuccess(response){return response.data}function handleFailure(response){return $q.reject(angular.isObject(response.data)&&null!=response.data.message?response.data:{message:"An unknown error occurred."})}return{sort:{name:{label:"Name",sort:"name",dir:"ASC"},username:{label:"Username",sort:"username",dir:"ASC"},created:{label:"Created",sort:"created",dir:"DESC"},relevance:{label:"Relevance",sort:"score",dir:"DESC"}},get:get,update:update,search:search,getAuthConfig:getAuthConfig}}]);
"use strict";angular.module("asymmetrik.util").controller("ConfirmController",["$scope","$modalInstance","$log","params",function($scope,$modalInstance,$log,params){$scope.title=params.title,$scope.message=params.message,$scope.okText=params.ok,$scope.cancelText=params.cancel,$scope.ok=function(){$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}]);
"use strict";angular.module("asymmetrik.util").filter("agoDateFilter",function(){return function(date){return null!=date&&(!Number.isNaN(date)||date instanceof Date)?moment(date).fromNow():"unknown"}});
"use strict";angular.module("asymmetrik.util").filter("dateDiffFilter",function(){return function(toDate,fromDate){return null!=toDate&&null!=fromDate?moment(toDate).from(fromDate,!0):"unknown"}});
"use strict";angular.module("asymmetrik.util").filter("durationFilter",function(){return function(duration){return null==duration||Number.isNaN(duration)?"unknown":1e3>duration?duration+" ms":12e4>duration?Math.floor(duration/1e3)+" seconds":moment.duration(duration).humanize()}});
"use strict";angular.module("asymmetrik.util").factory("Alerts",["$timeout",function($timeout){function clearAllAlerts(){for(var i=0;i<data.alerts.list.length;i++)data.alerts.list.pop();data.alerts.map={}}function clearAlert(index){var alert=data.alerts.list[index];data.alerts.list.splice(index,1),delete data.alerts.map[alert.id]}function clearAlertById(id){var alert=data.alerts.map[id];if(null!=alert){var index=data.alerts.list.indexOf(alert);clearAlert(index)}}function addAlert(msg,type,ttl){var alert={id:data.id++,type:type||data.defaultType,msg:msg};data.alerts.list.push(alert),data.alerts.map[alert.id]=alert,null!=ttl&&$timeout(function(){clearAlertById(alert.id)},ttl)}var data={id:0,alerts:{list:[],map:{}},defaultType:"danger"};return{alerts:data.alerts.list,clearAll:clearAllAlerts,clear:clearAlert,add:addAlert}}]);
"use strict";angular.module("wildfire").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise(function($injector){var $state=$injector.get("$state");$state.go("channel-list-all")}),$stateProvider.state("wf",{"abstract":!0,template:"<ui-view/>",resolve:{Configuration:["configService",function(configService){return configService.getConfig()}]}})}]);
"use strict";angular.module("wildfire").controller("ClassificationController",["$scope","Authentication","authService","configService",function($scope,Authentication,authService,configService){$scope.auth=Authentication,configService.getConfig().then(function(result){$scope.classification=result.classification,$scope.classification.css="classification-"+result.classification.code})}]);
"use strict";angular.module("wildfire").controller("FooterController",["$scope","Authentication","authService",function($scope,Authentication){$scope.auth=Authentication}]);
"use strict";angular.module("wildfire").controller("HeaderController",["$scope","Authentication","authService","configService",function($scope,Authentication,authService,configService){$scope.auth=Authentication,configService.getConfig().then(function(result){$scope.classification=result.classification})}]);
"use strict";angular.module("wildfire").service("configService",["$http","$q",function($http,$q){function getConfig(){return configDefer.promise}var configDefer=$q.defer();return $http({method:"get",url:"config"}).then(function(response){configDefer.resolve(response.data)},function(response){angular.isObject(response.data)&&null!=response.data.message||configDefer.reject("An unknown error occurred."),configDefer.reject(response.data.message)}),{getConfig:getConfig}}]);
"use strict";angular.module("wildfire").factory("urlHandlerService",["$http","$q","$log","$modal","$window","$injector","configService",function($http,$q,$log,$modal,$window,$injector,configService){function handleUrl(url){var defer=$q.defer();return configService.getConfig().then(function(config){if(null==config.urlHandler||"default"===config.urlHandler)handleUrlDefault(url),defer.resolve();else{var handler=$injector.get(config.urlHandler.service);handler.handleUrl(url).then(function(result){defer.resolve(result)},function(error){defer.reject(error)})}$http({method:"post",url:"urlHandler",data:{url:url}}).then(function(){},function(error){$log.error(error)})}),defer.promise}function handleUrlDefault(url){$window.open(url,"_blank")}return{handleUrl:handleUrl}}]);
"use strict";angular.module("wildfire").factory("websocket",["socketFactory",function(socketFactory){var factory=socketFactory();return factory}]);
"use strict";angular.module("wildfire").directive("wfMessage",["$log","$compile",function($log,$compile){var urlPattern=/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi,menuTemplate='<span class="dropdown" data-dropdown>';menuTemplate+='<a class="no-href dropdown-toggle" data-dropdown-toggle>$&</a>',menuTemplate+='<ul class="dropdown-menu">',menuTemplate+="<li data-ng-click=\"handleClick('$&')\"><a href>Retrieve URL</a></li>",menuTemplate+="</ul>",menuTemplate+="</span>";return{restrict:"A",require:"ngModel",replace:!0,scope:{ngModel:"=ngModel",urlClickHandler:"&wfUrlClickHandler"},controller:["$scope",function($scope){$scope.handleClick=function(url){$scope.urlClickHandler({url:url})}}],link:function(scope,element){scope.urlClickHandler=scope.urlClickHandler||function(url){$log.info("click: "+url)},scope.$watch("ngModel",function(value){var html;null!=value&&(html=value.replace(urlPattern,menuTemplate)),element.html(html),$compile(element.contents())(scope)})}}}]);