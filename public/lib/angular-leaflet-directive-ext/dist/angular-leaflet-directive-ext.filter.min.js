/*! angular-leaflet-directive-ext Version: 0.4.3 */
angular.module("leaflet-directive.ext.filter",["leaflet-directive"]).config(["$provide",function($provide){"use strict";$provide.decorator("controlsDirective",["$delegate","$timeout","leafletHelpers",function($delegate,$timeout,leafletHelpers){var directive=$delegate[0],link=directive.link;return directive.compile=function(){return function(scope,element,attrs,controller){if(link.apply(this,arguments),controller){var isDefined=leafletHelpers.isDefined,leafletScope=controller.getLeafletScope(),controls=leafletScope.controls;controller.getMap().then(function(map){if(null!=L&&null!=L.Control&&isDefined(L.Control.Filter)&&null!=controls&&isDefined(controls.filter)){var filterFeature=new L.FeatureGroup,filterOptions={position:"topright",filter:{rectangle:{}},filterGroup:filterFeature};angular.extend(filterOptions,controls.filter),controls.filter=filterOptions,map.addLayer(filterOptions.filterGroup);var filterControl=new L.Control.Filter(filterOptions);map.addControl(filterControl),leafletScope.$watch("controls.filter.shape",function(n,o){filterControl.setFilter(n)});var filterHandler=function(e){null!=controls&&null!=controls.filter&&(filterControl.equals(controls.filter.shape,e.geo)||$timeout(function(){controls.filter.shape=e.geo}))};map.on("filter:filter",filterHandler),leafletScope.$on("$destroy",function(){map.off("filter:filter",filterHandler)})}})}}},$delegate}])}]);